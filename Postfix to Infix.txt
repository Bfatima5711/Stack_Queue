******Problem Statement*********
*****Postfix to Infix*******

Problem statement
You are given a mathematical expression in postfix notation. The expression consists of alphabets(both lowercase and uppercase) and operators.



Convert this expression to infix notation.



Note:
Surround every expression with a pair of parentheses “()”.


Example:
Input: ‘postfix’ = “ab+c+”

Output: ‘infix’ = “((a+b)+c)”

Explanation: The expression ((a+b)+c)” in infix is equivalent to “ab+c+” in postfix.


Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1:
5
ab+c+
Sample Output 1:
((a+b)+c)


Explanation Of Sample Input 1 :
The expression “((a+b)+c)” in infix is equivalent to “ab+c+” in postfix.


Sample Input 2 :
9
ABC/DA-*+
Sample Output 2 :
(A+((B/C)*(D-A)))


Constraints:
3 <= ‘postfix.length’ <= 10^4

*******Code*********

import java.util.*;
public class Solution {
       public static String postToInfix(String exp) 

    {

        Stack<String> st = new Stack<>();
        
        for(char ch : exp.toCharArray())

        {

            if(alphabetOrNumber(ch))

                st.push(Character.toString(ch));

            else

            {

                StringBuilder temp = new StringBuilder();

                temp.append(st.pop());

                temp.insert(0, Character.toString(ch));

                temp.insert(0, st.pop());

                st.push(temp.toString());

            }

        }

        return st.peek();

    }

    static boolean alphabetOrNumber(char ch)

    {

        return ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch >= '0' && ch <= '9'));

    }

}

 
